
舍弃的输入节

 .group         0x0000000000000000        0x8 build/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/main.o
 .group         0x0000000000000000        0x8 build/init.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/init.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/init.o
 .group         0x0000000000000000        0x8 build/interrupt.o
 .group         0x0000000000000000        0x8 build/interrupt.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/interrupt.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/interrupt.o
 .group         0x0000000000000000        0x8 build/timer.o
 .group         0x0000000000000000        0x8 build/timer.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/timer.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/timer.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/timer.o
 .group         0x0000000000000000        0x8 build/debug.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/debug.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/debug.o
 .group         0x0000000000000000        0x8 build/string.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/string.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/string.o
 .group         0x0000000000000000        0x8 build/memory.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/memory.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/memory.o
 .group         0x0000000000000000        0x8 build/bitmap.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/bitmap.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/bitmap.o

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

段 .text 的地址设置为 0xc0001500
LOAD build/main.o
LOAD build/init.o
LOAD build/interrupt.o
LOAD build/timer.o
LOAD build/kernal.o
LOAD build/print.o
LOAD build/debug.o
LOAD build/string.o
LOAD build/memory.o
LOAD build/bitmap.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x00000000080480d4                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x00000000080480d4        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x00000000080480d4        0x0 build/main.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x00000000080480d4        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x00000000080480d4        0x0 build/main.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.relr.dyn
 *(.relr.dyn)
                0x0000000008049000                . = ALIGN (CONSTANT (MAXPAGESIZE))

.init
 *(SORT_NONE(.init))

.plt            0x0000000008049000        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008049000        0x0 build/main.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0001500     0x154a
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(SORT_BY_NAME(.text.sorted.*))
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500       0x33 build/main.o
                0x00000000c0001500                main
 .text.__x86.get_pc_thunk.bx
                0x00000000c0001533        0x4 build/main.o
                0x00000000c0001533                __x86.get_pc_thunk.bx
 .text          0x00000000c0001537       0x39 build/init.o
                0x00000000c0001537                init_all
 .text          0x00000000c0001570      0x450 build/interrupt.o
                0x00000000c000188e                idt_init
                0x00000000c000190b                intr_enable
                0x00000000c000193e                intr_disable
                0x00000000c0001971                intr_set_status
                0x00000000c0001999                intr_get_status
 .text.__x86.get_pc_thunk.ax
                0x00000000c00019c0        0x4 build/interrupt.o
                0x00000000c00019c0                __x86.get_pc_thunk.ax
 .text          0x00000000c00019c4      0x116 build/timer.o
                0x00000000c0001a86                timer_init
 *fill*         0x00000000c0001ada        0x6 
 .text          0x00000000c0001ae0      0x393 build/kernal.o
                0x00000000c0001ae0                intr_exit
 *fill*         0x00000000c0001e73        0xd 
 .text          0x00000000c0001e80      0x14f build/print.o
                0x00000000c0001e80                put_char
                0x00000000c0001f4d                put_str
                0x00000000c0001f6b                put_int
 .text          0x00000000c0001fcf       0xf4 build/debug.o
                0x00000000c0001fcf                panic_spin
 .text          0x00000000c00020c3      0x49c build/string.o
                0x00000000c00020c3                memset
                0x00000000c000212b                memcpy
                0x00000000c00021a1                memcmp
                0x00000000c000223a                strcpy
                0x00000000c00022a5                strlen
                0x00000000c0002302                strcmp
                0x00000000c0002391                strchr
                0x00000000c00023f9                strrchr
                0x00000000c000246d                strcat
                0x00000000c00024ed                strchrs
 .text          0x00000000c000255f      0x265 build/memory.o
                0x00000000c0002770                mem_init
 .text          0x00000000c00027c4      0x286 build/bitmap.o
                0x00000000c00027c4                bitmap_init
                0x00000000c00027f7                bitmap_scan_test
                0x00000000c0002840                bitmap_scan
                0x00000000c0002982                bitmap_set
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)
                0x00000000c0003000                . = ALIGN (CONSTANT (MAXPAGESIZE))
                0x00000000c0003000                . = SEGMENT_START ("rodata-segment", (ALIGN (CONSTANT (MAXPAGESIZE)) + (. & (CONSTANT (MAXPAGESIZE) - 0x1))))

.rodata         0x00000000c0003000      0x4ef
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c0003000        0xd build/main.o
 .rodata        0x00000000c000300d        0xa build/init.o
 *fill*         0x00000000c0003017        0x1 
 .rodata        0x00000000c0003018      0x265 build/interrupt.o
 .rodata        0x00000000c000327d       0x25 build/timer.o
 .rodata        0x00000000c00032a2       0x3f build/debug.o
 *fill*         0x00000000c00032e1        0x3 
 .rodata        0x00000000c00032e4       0xe0 build/string.o
 .rodata        0x00000000c00033c4       0xc7 build/memory.o
 *fill*         0x00000000c000348b        0x1 
 .rodata        0x00000000c000348c       0x63 build/bitmap.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c00034f0      0x4d0
 *(.eh_frame)
 .eh_frame      0x00000000c00034f0       0x54 build/main.o
 .eh_frame      0x00000000c0003544       0x24 build/init.o
                                         0x50 (松开之前的大小)
 .eh_frame      0x00000000c0003568      0x18c build/interrupt.o
                                        0x1b8 (松开之前的大小)
 .eh_frame      0x00000000c00036f4       0x70 build/timer.o
                                         0xb0 (松开之前的大小)
 .eh_frame      0x00000000c0003764       0x1c build/debug.o
                                         0x48 (松开之前的大小)
 .eh_frame      0x00000000c0003780      0x168 build/string.o
                                        0x194 (松开之前的大小)
 .eh_frame      0x00000000c00038e8       0x48 build/memory.o
                                         0x74 (松开之前的大小)
 .eh_frame      0x00000000c0003930       0x90 build/bitmap.o
                                         0xbc (松开之前的大小)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges*)
                0x00000000c0005000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges*)

.tdata          0x00000000c0005000        0x0
                [!provide]                        PROVIDE (__tdata_start = .)
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c0005000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c0005000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c0005000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c0005000        0x0
 *(.got)
 .got           0x00000000c0005000        0x0 build/main.o
 *(.igot)
                0x00000000c0005ff4                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c0005000        0xc
 *(.got.plt)
 .got.plt       0x00000000c0005000        0xc build/main.o
                0x00000000c0005000                _GLOBAL_OFFSET_TABLE_
 *(.igot.plt)
 .igot.plt      0x00000000c000500c        0x0 build/main.o

.data           0x00000000c000500c       0x8c
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c000500c        0x0 build/main.o
 .data          0x00000000c000500c        0x0 build/init.o
 .data          0x00000000c000500c        0x0 build/interrupt.o
 .data          0x00000000c000500c        0x0 build/timer.o
 .data          0x00000000c000500c       0x84 build/kernal.o
                0x00000000c000500c                intr_entry_table
 .data          0x00000000c0005090        0x8 build/print.o
 .data          0x00000000c0005098        0x0 build/debug.o
 .data          0x00000000c0005098        0x0 build/string.o
 .data          0x00000000c0005098        0x0 build/memory.o
 .data          0x00000000c0005098        0x0 build/bitmap.o

.data1
 *(.data1)
                0x00000000c0005098                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c0005098                . = .
                0x00000000c0005098                __bss_start = .

.bss            0x00000000c00050a0      0x274
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c00050a0        0x0 build/main.o
 .bss           0x00000000c00050a0        0x0 build/init.o
 .bss           0x00000000c00050a0      0x248 build/interrupt.o
                0x00000000c00050a0                intr_name
                0x00000000c0005140                idt_table
 .bss           0x00000000c00052e8        0x0 build/timer.o
 .bss           0x00000000c00052e8        0x0 build/debug.o
 .bss           0x00000000c00052e8        0x0 build/string.o
 .bss           0x00000000c00052e8       0x2c build/memory.o
                0x00000000c00052e8                kernel_pool
                0x00000000c00052f8                user_pool
                0x00000000c0005308                kernel_vaddr
 .bss           0x00000000c0005314        0x0 build/bitmap.o
 *(COMMON)
                0x00000000c0005314                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c0005314                . = ALIGN (0x4)
                0x00000000c0005314                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c0005314                . = ALIGN (0x4)
                0x00000000c0005314                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c0005314                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x2b
 *(.comment)
 .comment       0x0000000000000000       0x2b build/main.o
                                         0x2c (松开之前的大小)
 .comment       0x000000000000002b       0x2c build/init.o
 .comment       0x000000000000002b       0x2c build/interrupt.o
 .comment       0x000000000000002b       0x2c build/timer.o
 .comment       0x000000000000002b       0x2c build/debug.o
 .comment       0x000000000000002b       0x2c build/string.o
 .comment       0x000000000000002b       0x2c build/memory.o
 .comment       0x000000000000002b       0x2c build/bitmap.o

.gnu.build.attributes
 *(.gnu.build.attributes .gnu.build.attributes.*)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_addr
 *(.debug_addr)

.debug_line_str
 *(.debug_line_str)

.debug_loclists
 *(.debug_loclists)

.debug_macro
 *(.debug_macro)

.debug_names
 *(.debug_names)

.debug_rnglists
 *(.debug_rnglists)

.debug_str_offsets
 *(.debug_str_offsets)

.debug_sup
 *(.debug_sup)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(build/kernal.bin elf32-i386)
