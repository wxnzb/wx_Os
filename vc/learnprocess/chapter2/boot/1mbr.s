 ;主引导程序 
 ;回过头看，本章最让我好奇的就是他打印的位置
 ;小疑问
 ;为啥把这一行删了，他就打不出我想要打印的东西了，大概是BIOS将MBR加载到0x7c00地址，然后从0x7c00开始执行，但是磁盘上的东西没有被替换，那就没有运行现在写的代码，那他怎么还打印出东西了
SECTION MBR vstart=0x7c00       ;代码从编译0x7c00地址开始
            
    mov ax,cs                   ;此时cs寄存器为0x0000，将cs的值赋到ax中
    mov ds,ax
    mov es,ax
    mov ss,ax
    mov fs,ax
    mov sp,0x7c00               ;堆栈指针寄存器 sp 设置为 0x7C00

 
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ; 打印字符串 在清屏之前
    ; mov ax, message              ; 将字符串的地址加载到 ax
    ; mov bp, ax                   ; es:bp 指向字符串
    ; mov cx, 5                    ; 字符串长度为5
    ; mov ax, 0x1301               ; 功能号13：显示字符串
    ; mov bx, 0x2                  ; 页号0，属性黑底绿字
    ; int 0x10                     ; 调用 BIOS 中断
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;清屏 利用0x06号功能，上卷全部行，则可清屏。
;INT 0x10   功能号:0x06	   功能描述:上卷窗口
    mov ax, 0x600               ;0x600 是BIOS中断0x10的一个子功能，表示执行“滚屏操作”
    mov bx, 0x700               ;设置上卷行属性，0x07表示用黑底白字的属性填充空白行
    mov cx, 0                   ;cx 寄存器中表示左上角坐标,表示滚动区域的左上角是 (0, 0)
    mov dx, 0x184f	            ;dx 寄存器中表示右下角坐标,表示右下角是 (24, 79)，也就是屏幕的右下角
			                    ;VGA文本模式中,一行只能容纳80个字符,共25行。
			                    ;下标从0开始,所以0x18=24,0x4f=79
    int 0x10                    

;下面这三行代码是获取光标位置;为啥他位置的改变会影响打印的位置？？？？？,删除这行他的打印位置也会改变
    mov ah, 3		            ;调用BIOS中断int 0x10的3号子功能：获取光标位置
    mov bh, 0		            ;获取光标位置的显示页编号,0表示当前的显示页
    int 0x10		            ;输出: ch=光标开始行,cl=光标结束行,dh=光标所在行号,dl=光标所在列号

;之前很好奇字符为啥不是从第一行开始打印的，使用 BIOS 中断 0x10 的功能号 13（显示字符串）时，字符会从当前光标的位置开始打印，之前由于清屏操作，使得光标位置不在第一行
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; mov ah, 2            ; 功能号2：设置光标位置
; mov bh, 0            ; 页号0
; mov dh, 0            ; 行号0
; mov dl, 0            ; 列号0
; int 0x10            ; 调用 BIOS 中断
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;打印字符串           调用13号子功能打印字符串

;直接写成这样mov bp, message也是可以的
    mov ax, message             ;将 message（表示字符串的起始地址）存入ax寄存器
    mov bp, ax	            ; es:bp 为串首地址, es此时同cs一致
    mov cx, 5		            ; cx 为串长度,不包括结束符0的字符个数,表示要打印的字符串长度是 5 个字符
    mov ax, 0x1301	            ; 子功能号13是显示字符及属性,要存入ah寄存器,
                                ; ah = 0x13：int 0x10 的 13 号子功能:显示字符串
			                    ; al设置写字符方式 ah=01: 显示字符串,光标跟随移动
    mov bx, 0x2		            ; bh存储要显示的页号,此处是第0页,
			                    ; bl中是字符属性, 属性黑底绿字(bl = 02h,07是黑底白字)
    int 0x10		            

;打字字符串结束	
    jmp $		                ; 使程序悬停在此

    message db "wu xi"
    times 510-($-$$) db 0;      ;用 0 将本扇区剩余空间填充
    db 0x55,0xaa